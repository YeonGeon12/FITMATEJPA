// build.gradle (Final Version)

// 1. 플러그인 설정
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
}

// 2. 프로젝트 기본 정보
group = 'kopo'
version = '0.0.1-SNAPSHOT'
description = 'FITMATE'

// 3. Java 설정
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// 4. Lombok 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// 5. 라이브러리 저장소 설정
repositories {
    mavenCentral() // Gemini API 라이브러리는 여기에 정식으로 포함되어 있습니다.
}

// 6. 라이브러리 버전 관리용 변수
ext {
    // Spring Boot 3.2.x와 가장 잘 호환되는 공식 Spring Cloud 버전입니다.
    springCloudVersion = "2023.0.1"
}

// 7. 의존성 버전 관리 (BOM) - [수정됨] 주석 해제 필수!
// 여러 라이브러리 간 버전 충돌을 막아주는 매우 중요한 부분입니다.
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// 8. 의존성 라이브러리 목록
dependencies {
    // --- Spring Boot Starters ---
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // --- Spring Cloud & Session ---
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign' // [수정됨] 주석 해제
    implementation 'org.springframework.session:spring-session-data-redis'

    // --- Thymeleaf & Security Extras ---
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // OpenAI 공식 Java SDK (예시 버전 — 실제 최신 버전 확인 필요)
    implementation 'com.openai:openai-java:4.1.0'


    // --- Developer Tools & Database Driver ---
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // --- Testing ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// 9. 테스트 설정
tasks.named('test') {
    useJUnitPlatform()
}